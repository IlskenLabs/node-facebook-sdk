Express server listening on port 3000 in development mode
{ socket: 
   { pair: 
      { _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: {},
        servername: false,
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _events: [Object],
        _writeCalled: false,
        cycleEncryptedPullLock: false,
        cycleCleartextPullLock: false,
        cycleCleartextPushLock: false,
        cycleEncryptedPushLock: false },
     writable: true,
     readable: true,
     _paused: false,
     _needDrain: false,
     _pending: [],
     _pendingCallbacks: [],
     _pendingBytes: 0,
     socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 856,
        bytesWritten: 792,
        allowHalfOpen: false,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _pipeCount: 1,
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Thu, 01 Mar 2012 23:44:24 GMT },
     encrypted: 
      { pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        _events: [Object],
        _pipeCount: 1 },
     authorized: false,
     _controlReleased: true,
     npnProtocol: undefined,
     servername: false,
     ondrain: [Function],
     _events: { timeout: [Function], error: [Function], close: [Object] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular],
        writeHead: [Function],
        end: [Function] } },
  connection: 
   { pair: 
      { _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: {},
        servername: false,
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _events: [Object],
        _writeCalled: false,
        cycleEncryptedPullLock: false,
        cycleCleartextPullLock: false,
        cycleCleartextPushLock: false,
        cycleEncryptedPushLock: false },
     writable: true,
     readable: true,
     _paused: false,
     _needDrain: false,
     _pending: [],
     _pendingCallbacks: [],
     _pendingBytes: 0,
     socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 856,
        bytesWritten: 792,
        allowHalfOpen: false,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _pipeCount: 1,
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Thu, 01 Mar 2012 23:44:24 GMT },
     encrypted: 
      { pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        _events: [Object],
        _pipeCount: 1 },
     authorized: false,
     _controlReleased: true,
     npnProtocol: undefined,
     servername: false,
     ondrain: [Function],
     _events: { timeout: [Function], error: [Function], close: [Object] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular],
        writeHead: [Function],
        end: [Function] } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:3000',
     connection: 'keep-alive',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_2) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-encoding': 'gzip,deflate,sdch',
     'accept-language': 'en-US,en;q=0.8',
     'accept-charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
     cookie: 'connect.sid=jVSM29DzN2GG2lQYcT8FyfNi.hEx0Hy8ZK6CAhexq3HBZiU3m%2BtDOGxlLlzC3c%2B3AXT8' },
  trailers: {},
  readable: false,
  url: '/',
  method: 'GET',
  statusCode: null,
  client: 
   { pair: 
      { _secureEstablished: true,
        _isServer: true,
        _encWriteState: true,
        _clearWriteState: true,
        _doneFlag: false,
        credentials: [Object],
        _rejectUnauthorized: false,
        _requestCert: false,
        ssl: {},
        servername: false,
        cleartext: [Circular],
        encrypted: [Object],
        fd: undefined,
        _events: [Object],
        _writeCalled: false,
        cycleEncryptedPullLock: false,
        cycleCleartextPullLock: false,
        cycleCleartextPushLock: false,
        cycleEncryptedPushLock: false },
     writable: true,
     readable: true,
     _paused: false,
     _needDrain: false,
     _pending: [],
     _pendingCallbacks: [],
     _pendingBytes: 0,
     socket: 
      { _handle: [Object],
        _pendingWriteReqs: 0,
        _flags: 0,
        _connectQueueSize: 0,
        destroyed: false,
        bytesRead: 856,
        bytesWritten: 792,
        allowHalfOpen: false,
        writable: true,
        readable: true,
        server: [Object],
        _events: [Object],
        _pipeCount: 1,
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Thu, 01 Mar 2012 23:44:24 GMT },
     encrypted: 
      { pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        _events: [Object],
        _pipeCount: 1 },
     authorized: false,
     _controlReleased: true,
     npnProtocol: undefined,
     servername: false,
     ondrain: [Function],
     _events: { timeout: [Function], error: [Function], close: [Object] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular],
        writeHead: [Function],
        end: [Function] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/',
  query: {},
  app: 
   { stack: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     requestCert: false,
     rejectUnauthorized: false,
     key: '-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQDv2ro6tTJ4VS97kGDMpu4uNDtSET7WnqFTexDeYpg5aTHSAN5+\nE1H1IDCF5wysmwZtlrutxMAQM0q31GDuaPM+TfBE/5b/sq4UjVAW8YpmaQ93O049\nQA9Kt2mtsaE1Ru14EUy4+oKBuzOnEDzSTCI/o/CvhqyoFd35vPlwkQCB/QIDAQAB\nAoGAbcfC7RP6IbF7piaS55iP833cmNdj13+Lf1YYhnDCE6TeNKxJKZNWM8ej7eWu\nm2HpM0eGZyZicgfH7xO5ueU3Ty4qJH2ZutEQj+Be3EoC3TtpwU4aDAX9k++/r2TH\ngEm2DoptErjqGatwzT9N936PEEO9iRbL0NxFwpEX6fd8RtECQQD7OuqyfWgU+Q06\nKF3FD4XLJdhacCAha5hxi6EMx7lQW9LPPkUMH9DXF6MUJiuQEJwZogVLcTfBNYFl\ngHIUDSC7AkEA9GiFFACiRwCRVhoQA1nfXlKFLH0TY9t+0NiPfZD3XHwReJP00aJn\ng/19jH+Z9mxANY/LADv0K6LY5LbKrAH4pwJAY+AqScc9R4kzTvmZPaxMHlTvTBTj\nUSX7Nrixz+jerSm0BxvUS1uipMAK3wnFq8JOrIoS3MknxzHEPVvw/jOx3QJBAJAt\n3FuJaDGkhxgY9dtUOC3HVmKBQmAFCxGevz8etp2rXw8XkTPdr10wu9CXMbcp8tLm\nCaYQuCDJx1Nc9cB0xT8CQAdLzECDxZcfydprJLdvmvTjRze5+7pBHV0sFtEWW/7p\nhvR7HQnOWXiEEm5QRT+PRSHeWnQlEZlqAW/IwSlqQyA=\n-----END RSA PRIVATE KEY-----\n',
     cert: '-----BEGIN CERTIFICATE-----\nMIICWzCCAcQCCQCc78xYjHgoUjANBgkqhkiG9w0BAQUFADByMQswCQYDVQQGEwJV\nUzELMAkGA1UECAwCTkoxEDAOBgNVBAcMB01hcmx0b24xFDASBgNVBAoMC0lsc2tl\nbiBMYWJzMQ0wCwYDVQQDDARUYXJxMR8wHQYJKoZIhvcNAQkBFhBjaHJpc0BpbHNr\nZW4uY29tMB4XDTEyMDMwMTIzMzUxMloXDTEyMDMzMTIzMzUxMlowcjELMAkGA1UE\nBhMCVVMxCzAJBgNVBAgMAk5KMRAwDgYDVQQHDAdNYXJsdG9uMRQwEgYDVQQKDAtJ\nbHNrZW4gTGFiczENMAsGA1UEAwwEVGFycTEfMB0GCSqGSIb3DQEJARYQY2hyaXNA\naWxza2VuLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA79q6OrUyeFUv\ne5BgzKbuLjQ7UhE+1p6hU3sQ3mKYOWkx0gDefhNR9SAwhecMrJsGbZa7rcTAEDNK\nt9Rg7mjzPk3wRP+W/7KuFI1QFvGKZmkPdztOPUAPSrdprbGhNUbteBFMuPqCgbsz\npxA80kwiP6Pwr4asqBXd+bz5cJEAgf0CAwEAATANBgkqhkiG9w0BAQUFAAOBgQAP\nCdWzsvIwyn6iDG9Zp45I0wIjk2dlVui5P7t0ZJ83g/NfLGolerxnaBMqwumGUpuj\nMjbeQmaJ0FMqfVZsPK5VLcCSGqCkaDyBHhyhhpX4158anPdEE4Dc9E8TBXV6AHWt\npBHdxhrLwaqHO2MBKajW/8xHjRRSNkx6JQNGFUkJvQ==\n-----END CERTIFICATE-----\n',
     SNICallback: [Function],
     _events: 
      { connection: [Function],
        secureConnection: [Function: connectionListener],
        request: [Function],
        listening: [Function] },
     connections: 1,
     allowHalfOpen: false,
     _handle: 
      { writeQueueSize: 0,
        onconnection: [Function: onconnection],
        socket: [Circular] },
     httpAllowHalfOpen: false,
     cache: {},
     settings: 
      { env: 'development',
        hints: true,
        views: '/Users/chris/Development/node-facebook-sdk/test-server/views',
        'view engine': 'jade' },
     redirects: {},
     isCallbacks: {},
     _locals: { settings: [Object], app: [Circular] },
     dynamicViewHelpers: {},
     errorHandlers: [],
     route: '/',
     routes: 
      { app: [Circular],
        routes: [Object],
        params: {},
        _params: [],
        middleware: [Function] },
     router: [Getter],
     __usedRouter: true },
  res: 
   { output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     socket: 
      { pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: undefined,
        servername: false,
        ondrain: [Function],
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     connection: 
      { pair: [Object],
        writable: true,
        readable: true,
        _paused: false,
        _needDrain: false,
        _pending: [],
        _pendingCallbacks: [],
        _pendingBytes: 0,
        socket: [Object],
        encrypted: [Object],
        authorized: false,
        _controlReleased: true,
        npnProtocol: undefined,
        servername: false,
        ondrain: [Function],
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     _events: { finish: [Function] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     app: 
      { stack: [Object],
        requestCert: false,
        rejectUnauthorized: false,
        key: '-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQDv2ro6tTJ4VS97kGDMpu4uNDtSET7WnqFTexDeYpg5aTHSAN5+\nE1H1IDCF5wysmwZtlrutxMAQM0q31GDuaPM+TfBE/5b/sq4UjVAW8YpmaQ93O049\nQA9Kt2mtsaE1Ru14EUy4+oKBuzOnEDzSTCI/o/CvhqyoFd35vPlwkQCB/QIDAQAB\nAoGAbcfC7RP6IbF7piaS55iP833cmNdj13+Lf1YYhnDCE6TeNKxJKZNWM8ej7eWu\nm2HpM0eGZyZicgfH7xO5ueU3Ty4qJH2ZutEQj+Be3EoC3TtpwU4aDAX9k++/r2TH\ngEm2DoptErjqGatwzT9N936PEEO9iRbL0NxFwpEX6fd8RtECQQD7OuqyfWgU+Q06\nKF3FD4XLJdhacCAha5hxi6EMx7lQW9LPPkUMH9DXF6MUJiuQEJwZogVLcTfBNYFl\ngHIUDSC7AkEA9GiFFACiRwCRVhoQA1nfXlKFLH0TY9t+0NiPfZD3XHwReJP00aJn\ng/19jH+Z9mxANY/LADv0K6LY5LbKrAH4pwJAY+AqScc9R4kzTvmZPaxMHlTvTBTj\nUSX7Nrixz+jerSm0BxvUS1uipMAK3wnFq8JOrIoS3MknxzHEPVvw/jOx3QJBAJAt\n3FuJaDGkhxgY9dtUOC3HVmKBQmAFCxGevz8etp2rXw8XkTPdr10wu9CXMbcp8tLm\nCaYQuCDJx1Nc9cB0xT8CQAdLzECDxZcfydprJLdvmvTjRze5+7pBHV0sFtEWW/7p\nhvR7HQnOWXiEEm5QRT+PRSHeWnQlEZlqAW/IwSlqQyA=\n-----END RSA PRIVATE KEY-----\n',
        cert: '-----BEGIN CERTIFICATE-----\nMIICWzCCAcQCCQCc78xYjHgoUjANBgkqhkiG9w0BAQUFADByMQswCQYDVQQGEwJV\nUzELMAkGA1UECAwCTkoxEDAOBgNVBAcMB01hcmx0b24xFDASBgNVBAoMC0lsc2tl\nbiBMYWJzMQ0wCwYDVQQDDARUYXJxMR8wHQYJKoZIhvcNAQkBFhBjaHJpc0BpbHNr\nZW4uY29tMB4XDTEyMDMwMTIzMzUxMloXDTEyMDMzMTIzMzUxMlowcjELMAkGA1UE\nBhMCVVMxCzAJBgNVBAgMAk5KMRAwDgYDVQQHDAdNYXJsdG9uMRQwEgYDVQQKDAtJ\nbHNrZW4gTGFiczENMAsGA1UEAwwEVGFycTEfMB0GCSqGSIb3DQEJARYQY2hyaXNA\naWxza2VuLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA79q6OrUyeFUv\ne5BgzKbuLjQ7UhE+1p6hU3sQ3mKYOWkx0gDefhNR9SAwhecMrJsGbZa7rcTAEDNK\nt9Rg7mjzPk3wRP+W/7KuFI1QFvGKZmkPdztOPUAPSrdprbGhNUbteBFMuPqCgbsz\npxA80kwiP6Pwr4asqBXd+bz5cJEAgf0CAwEAATANBgkqhkiG9w0BAQUFAAOBgQAP\nCdWzsvIwyn6iDG9Zp45I0wIjk2dlVui5P7t0ZJ83g/NfLGolerxnaBMqwumGUpuj\nMjbeQmaJ0FMqfVZsPK5VLcCSGqCkaDyBHhyhhpX4158anPdEE4Dc9E8TBXV6AHWt\npBHdxhrLwaqHO2MBKajW/8xHjRRSNkx6JQNGFUkJvQ==\n-----END CERTIFICATE-----\n',
        SNICallback: [Function],
        _events: [Object],
        connections: 1,
        allowHalfOpen: false,
        _handle: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        __usedRouter: true },
     req: [Circular],
     writeHead: [Function],
     end: [Function] },
  next: [Function: next],
  body: {},
  originalMethod: 'GET',
  cookies: { 'connect.sid': 'jVSM29DzN2GG2lQYcT8FyfNi.hEx0Hy8ZK6CAhexq3HBZiU3m+tDOGxlLlzC3c+3AXT8' },
  sessionStore: { sessions: {}, hash: [Function], generate: [Function] },
  sessionID: 'Lzk8aqsCS3752SL9GvbbzEad.H+9ZplMdMik3QQ5LYoCdYf0z0Z9/BjLl74kvP5k2/Yg',
  _events: { data: [Function], end: [Function] },
  session: 
   { lastAccess: 1330645464208,
     cookie: 
      { path: '/',
        httpOnly: true,
        _expires: Fri, 02 Mar 2012 03:44:24 GMT,
        originalMaxAge: 14400000 } },
  _route_index: 0,
  route: 
   { path: '/',
     method: 'get',
     callbacks: [ [Function] ],
     keys: [],
     regexp: /^\/\/?$/i,
     params: [] },
  params: [] }
undefined
